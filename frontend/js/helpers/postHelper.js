// Generated by CoffeeScript 1.7.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.PostHelper = (function() {
    function PostHelper() {
      this.onUserCreatePost = __bind(this.onUserCreatePost, this);
      this.init = __bind(this.init, this);
      this.init();
    }

    PostHelper.prototype.init = function() {
      return $('.login-container').on('click', '.create-user, .update-user', this.onUserCreatePost);
    };

    PostHelper.prototype.onUserCreatePost = function(e) {
      var form, target;
      target = $(e.currentTarget);
      form = $(target.closest('form'));
      e.preventDefault();
      console.log('fkjda;fnkdla; ' + form.attr('action') + ' ' + form.attr('method') + ' ' + form.serialize());
      $('.error').remove();
      $('.label-error').removeClass('label_error');
      return $.ajax(form.attr('action'), {
        type: form.attr('method'),
        data: form.serialize(),
        error: function(data, status, headers, error) {
          return console.log('create user failure');
        },
        success: function(data, status, headers, config) {
          var element, key, value, _ref, _results;
          if (data.error) {
            _ref = data.error;
            _results = [];
            for (key in _ref) {
              value = _ref[key];
              console.log('error key = ' + key + ' value = ' + value);
              if (key === 'body') {
                _results.push($('.navbar').after('<p class="error_message">' + value + '</p>'));
              } else {
                element = "input[name='" + key + "']";
                $("label[for='" + key + "']").addClass('label-error');
                _results.push($(element).before('<p class="error label-error">' + value + '</p>'));
              }
            }
            return _results;
          } else {
            return window.location = data.redirect;
          }
        }
      });
    };

    return PostHelper;

  })();

  $(function() {
    var ph;
    return ph = new PostHelper();
  });

}).call(this);
